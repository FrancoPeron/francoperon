---
import Logo from "@components/_atoms/logo.astro";
import Icon from "@components/_atoms/icons/Icon.astro";
import SocialsList from "@components/_molecules/SocialsList.astro";
import LinksList from "@components/_molecules/LinksList.astro";
import ThemeToggle from "@components/_molecules/ThemeToggle.astro";
---

<nav class="relative p-8 mb-8 lg:mb-16 z-50">
  <div class="menu-header flex justify-between">
    <a href="/"><Logo /></a>

    <!-- ============================================== -->

    <menu-button>
      <template>
        <button class="menu-button" aria-expanded="false">
          <span class="sr-only">Menu</span>
          <Icon icon="list" />
        </button>
      </template>
    </menu-button>
  </div>

  <!-- ====================================================== -->

  <div id="menu-content" hidden>
    <LinksList />
    <div class="menu-footer">
      <SocialsList />
      <!-- <div class="theme-toggle">
        <ThemeToggle />
      </div> -->
    </div>
  </div>
</nav>

<script>
  class MenuButton extends HTMLElement {
    constructor() {
      super();

      // Inject menu toggle button when JS runs.
      this.appendChild(this.querySelector("template")!.content.cloneNode(true));
      const btn = this.querySelector("button")!;

      // Hide menu (shown by default to support no-JS browsers).
      const menuHeader = document.querySelector(".menu-header")!;
      const menu = document.getElementById("menu-content")!;
      menu.hidden = true;
      // Add "menu-content" class in JS to avoid covering content in non-JS browsers.
      menu.classList.add("menu-content");

      /** Set whether the menu is currently expanded or collapsed. */
      const setExpanded = (expand: boolean) => {
        btn.setAttribute("aria-expanded", expand ? "true" : "false");
        menu.hidden = !expand;
        if (expand) {
          menuHeader.classList.add("phone-background");
        } else {
          menuHeader.classList.remove("phone-background");
        }
      };

      // Toggle menu visibility when the menu button is clicked.
      btn.addEventListener("click", () => setExpanded(menu.hidden));

      // Hide menu button for large screens.
      const handleViewports = (e: MediaQueryList | MediaQueryListEvent) => {
        setExpanded(e.matches);
        btn.hidden = e.matches;
      };
      const mediaQueries = window.matchMedia("(min-width: 50em)");
      handleViewports(mediaQueries);
      mediaQueries.addEventListener("change", handleViewports);
    }
  }
  customElements.define("menu-button", MenuButton);
</script>

<style>
  .phone-background {
    backdrop-filter: blur(2rem);
    /* background-color: rgba(49, 49, 49, 0.438);  */
  }

  .menu-button {
    position: relative;
    display: flex;
    border: 0;
    border-radius: 999rem;
    padding: 0.5rem;
    font-size: 1.5rem;
    color: var(--gray-300);
    background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
    box-shadow: var(--shadow-md);
  }

  .menu-button[aria-expanded="true"] {
    color: var(--gray-0);
    background: linear-gradient(180deg, var(--gray-600), transparent),
      radial-gradient(var(--gray-900), var(--gray-800) 150%);
  }

  .menu-button[hidden] {
    display: none;
  }

  .menu-button::before {
    position: absolute;
    inset: -1px;
    content: "";
    background: var(--gradient-stroke);
    border-radius: 999rem;
    z-index: -1;
  }

  @media (min-width: 50em) {
    nav {
      display: grid;
      grid-template-columns: 1fr auto 1fr;
      align-items: center;
      gap: 1rem;
    }

    .menu-header {
      padding: 0;
      backdrop-filter: blur(0rem);
      background-color: transparent;
    }

    .site-title {
      font-size: var(--text-lg);
    }
  }
</style>

<style>

  .menu-content {
    position: absolute;
    left: 0;
    right: 0;
    top: 100%;
  }

  .menu-footer {
    --icon-size: var(--text-xl);
    --icon-padding: 0.5rem;

    display: flex;
    justify-content: space-between;
    gap: 0.75rem;
    padding: 1.5rem 2rem 1.5rem 1.5rem;
    background-color: #13151a;
    border-radius: 0 0 0.75rem 0.75rem;
    box-shadow: var(--shadow-sm);
  }

  .theme-toggle {
    display: flex;
    align-items: center;
    height: calc(var(--icon-size) + 2 * var(--icon-padding));
  }


  @media (min-width: 50em) {
    .menu-content {
      display: contents;
    }

    .menu-footer {
      --icon-padding: 0.375rem;

      justify-self: flex-end;
      align-items: center;
      padding: 0;
      background-color: transparent;
      box-shadow: none;
    }
  }
</style>
